{"ast":null,"code":"// The cart utils file helps to avoid duplicating items\n//(avoid same item in multiple times and also increase quantity of that curresponding item).\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const RemoveItemFromCart = (cartItems, cartItemsToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemsToRemove.id);\n};","map":{"version":3,"sources":["/home/nidheesh/Music/react-udemy-course/reactDeveloper-2020/section-4/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","RemoveItemFromCart","cartItemsToRemove"],"mappings":"AAAA;AACA;AAEA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADnB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAC3BA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACI,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEIH,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACD,CAdM;AAgBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAWS,iBAAX,KAAgC;AAClE,QAAQP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACzBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,iBAAiB,CAACJ,EADrB,CAA3B;AAGC,CAJM","sourcesContent":["// The cart utils file helps to avoid duplicating items\n//(avoid same item in multiple times and also increase quantity of that curresponding item).\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(\n    cartItem => cartItem.id === cartItemToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem =>\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const RemoveItemFromCart = (cartItems,cartItemsToRemove) =>{\nconst   existingCartItem = cartItems.find(\n  cartItem => cartItem.id === cartItemsToRemove.id\n)\n}\n"]},"metadata":{},"sourceType":"module"}