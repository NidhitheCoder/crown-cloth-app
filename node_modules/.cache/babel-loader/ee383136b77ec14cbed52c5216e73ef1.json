{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nconst SagaMiddleware = createSagaMiddleware();\nconst middlewares = [SagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  // for avoid loging in production\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nSagaMiddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/home/nidheesh/Music/react-udemy-course/crown-cloth-app/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","persistStore","createSagaMiddleware","fetchCollectionsStart","SagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAAQC,qBAAR,QAAoC,mBAApC;AAEA,MAAMC,cAAc,GAAIF,oBAAoB,EAA5C;AAEC,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AAAE;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAEF,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACG,WAAD,EAAaF,eAAe,CAAC,GAAGO,WAAJ,CAA5B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,qBAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGX,YAAY,CAACS,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAOE,EAAAA;AAAP,CAAf","sourcesContent":["import {createStore,applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport {persistStore} from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\n\nimport {fetchCollectionsStart} from './shop/shop.sagas';\n\nconst SagaMiddleware =  createSagaMiddleware();\n\n const middlewares = [SagaMiddleware];\n\n if(process.env.NODE_ENV === 'development'){ // for avoid loging in production\n     middlewares.push(logger);\n }\n\nexport const store = createStore(rootReducer,applyMiddleware(...middlewares));\n\nSagaMiddleware.run(fetchCollectionsStart);\n\nexport const persistor = persistStore(store)\n\nexport default {store,persistor};\n"]},"metadata":{},"sourceType":"module"}