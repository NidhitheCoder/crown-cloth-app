{"ast":null,"code":"var _jsxFileName = \"/home/nidheesh/Music/react-udemy-course/crown-cloth-app/src/pages/shopPage/shopPage.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\"; // import {createStructuredSelector} from 'reselect';\n// import CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collection-overview.container'; // import CollectionPage from \"../collection/collection.component\";\n\nimport CollectionPageContainer from '../collection/collection.container';\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.action\"; // import {selectIsCollectionLoaded} from '../../redux/shop/shop.selectors'; //selectIsCollectionFetching\n// import WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStart\n    } = this.props;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props; //isCollectionFetching,isCollectionLoaded\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}` // render={props => (\n      //   <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />\n      // )}\n      ,\n      component: CollectionsOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId` // render={props => (\n      //   <CollectionPageWithSpinner isLoading={!isCollectionLoaded} {...props} />\n      // )}\n      ,\n      component: CollectionPageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // const mapStateToProps = createStructuredSelector({\n//   //  isCollectionFetching:selectIsCollectionFetching,\n//    isCollectionLoaded : selectIsCollectionLoaded\n// })\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/nidheesh/Music/react-udemy-course/crown-cloth-app/src/pages/shopPage/shopPage.component.jsx"],"names":["React","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStart","ShopPage","Component","componentDidMount","props","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AAEA;;AACA,OAAOC,4BAAP,MAAyC,qEAAzC,C,CACA;;AACA,OAAOC,uBAAP,MAAqC,oCAArC;AAEA,SAASC,qBAAT,QAAsC,8BAAtC,C,CACA;AAEA;AAEA;AACA;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAErCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACH,MAAAA;AAAD,QAAyB,KAAKI,KAApC;AACAJ,IAAAA,qBAAqB;AACtB;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKF,KAAtB,CADO,CACsB;;AAC7B,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFtB,CAGE;AACA;AACA;AALF;AAME,MAAA,SAAS,EAAET,4BANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBADtB,CAEE;AACA;AACA;AAJF;AAKE,MAAA,SAAS,EAAGR,uBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAmBD;;AA5BoC,C,CA+BvC;AACA;AACA;AACA;;;AAEA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACtCT,EAAAA,qBAAqB,EAAC,MAAMS,QAAQ,CAACT,qBAAqB,EAAtB;AADE,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCP,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// import {createStructuredSelector} from 'reselect';\n\n// import CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionsOverviewContainer from '../../components/collections-overview/collection-overview.container';\n// import CollectionPage from \"../collection/collection.component\";\nimport CollectionPageContainer  from '../collection/collection.container';\n\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.action\";\n// import {selectIsCollectionLoaded} from '../../redux/shop/shop.selectors'; //selectIsCollectionFetching\n\n// import WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n  componentDidMount() {\n    const {fetchCollectionsStart}= this.props;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    const { match} = this.props; //isCollectionFetching,isCollectionLoaded\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          // render={props => (\n          //   <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />\n          // )}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          // render={props => (\n          //   <CollectionPageWithSpinner isLoading={!isCollectionLoaded} {...props} />\n          // )}\n          component ={CollectionPageContainer}\n        />\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = createStructuredSelector({\n//   //  isCollectionFetching:selectIsCollectionFetching,\n//    isCollectionLoaded : selectIsCollectionLoaded\n// })\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart:() => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}